


1)
SElECT  VendorContactLName,VendorContactFName,VendorName
FROM Vendors
ORDER BY  VendorContactLName,VendorContactFName;

2)
SElECT InvoiceNumber  AS Nunmber,
       InvoiceTotal   AS Total,
	   (PaymentTotal+CreditTotal)  AS Credit,
	   (InvoiceTotal- (PaymentTotal+CreditTotal))  AS  Balance

FROM
Invoices 


3)
SElECT (VendorContactFName +','+VendorContactLName) AS FullNamed
FROM
Vendors 
ORDER BY  VendorContactLName,VendorContactFName;

4)
SElECT   (InvoiceTotal)*0.1 AS perc ,InvoiceTotal,
InvoiceTotal+(InvoiceTotal*0.1) AS Balanceddd

FROM
Invoices
Where  Balanceddd >1000;


--ORDER BY  InvoiceTotal DESC

5)
SElECT InvoiceNumber  AS Nunmber,
       InvoiceTotal   ,
	   (PaymentTotal+CreditTotal)  AS Credit,
	   (InvoiceTotal- (PaymentTotal+CreditTotal))  AS  Balance

FROM
Invoices 
Where InvoiceTotal BETWEEN  500 and 1000

6)


Chap 4
1)
Select   VendorName, VendorAddress1, VendorAddress2, VendorCity, VendorState, VendorZipCode, VendorPhone, VendorContactLName, VendorContactFName, DefaultTermsID, DefaultAccountNo
from Vendors  AS v join Invoices AS i on
 v.VendorID=i.VendorID

 2)
SELECT InvoiceNumber,VendorName,InvoiceDueDate,InvoiceTotal-PaymentTotal-CreditTotal AS BalanceFROM  Vendors v JOIN Invoices i ONv.VendorID=i.InvoiceIDWhere  InvoiceTotal-PaymentTotal-CreditTotal  > 0ORDER by VendorName


3)
SELECT VendorName,DefaultAccountNo,AccountDescriptionFROM  Vendors v  JOIN GLAccounts i ONv.VendorID=i.AccountNoORDER by AccountDescription,VendorName


4)
SELECT InvoiceNumber,VendorName,InvoiceDueDate,InvoiceTotal-PaymentTotal-CreditTotal AS BalanceFROM  Vendors v ,Invoices i 
Where v.VendorID=i.InvoiceID and InvoiceTotal-PaymentTotal-CreditTotal  > 0ORDER by VendorName

5)
SELECT VendorName  AS Vendor,InvoiceDate  AS Date ,InvoiceNumber  AS  Number,InvoiceSequence  As #,InvoiceLineItemAmount AS LineItemFROMVendors  AS V join Invoices  AS i ONV.VendorID=i.VendorID JOIN InvoiceLineItems LI ONi.InvoiceID=Li.InvoiceIDORDER BY Vendor,Date,Number,#6)
SELECT   DISTINCT V1.VendorID,V1.VendorName,                  V1.VendorContactFName +','+ V1.VendorContactLName AS NameFROM Vendors  V1 JOIN Vendors V2  ONV1.VendorID=V2.VendorID7)
SELECT DISTINCT  G.AccountNo,AccountDescriptionFROM GLAccounts  G LEFT  OUTER JOIN  InvoiceLineItems ION  G.AccountNo=I.AccountNoORDER  BY G.AccountNo

8)

SELECT vend_name,vend_state  FROM  Vendors WHERE vend_state= 'CA'UNIONSELECT vend_name,'OutsideCA ' AS vend_stateFROM  Vendors WHERE vend_state <> 'CA'

Write a SELECT statement that returns these two columns:

CategoryName The CategoryName column from the Categories
table

ProductID The ProductID column from
the Products table

Return one row for each category that has never been used. Hint: Use an outer join and only
return rows where the ProductID column contains a null value.

HTML Editor Keyboard Shortcuts


SELECT  CategoryName,ProductID

FROM Categories C LEFT OUTER JOIN Products P

ON C.CategoryID=P.CategoryID

WHERE p.ProductID  is null

Write a SELECT statement that returns the ProductName and ListPrice columns from the Products table.

Return one row for each product that has the same list price as another product. Hint: Use a self-join to check that the ProductID columns arenâ€™t equal but the ListPrice column is equal.

Sort the result set by ProductName.


SELECT  DISTINCT P1.ProductName,P1.ListPrice

FROM Products AS P1 JOIN Products AS P2

ON

(P1.ProductID<>P2.ProductID)

AND (P1.ListPrice=P2.ListPrice)

ORDER BY  ProductName

Write a SELECT statement that joins the Customers table to the Addresses table and returns these columns: First Name, Last Name, Line1, City, State, ZipCode.

Return one row for each customer, but only return addresses that are the shipping address for a customer.

SELECT    FirstName,LastName,Line1,City,State,ZipCode



FROM  Customers  C, Addresses A WHERE

(C. CustomerID=A.CustomerID)  AND

C.BillingAddressID=AddressID




